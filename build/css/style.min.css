/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}[data-simplebar]{position:relative;flex-direction:column;flex-wrap:wrap;justify-content:flex-start;align-content:flex-start;align-items:flex-start}.simplebar-wrapper{overflow:hidden;width:inherit;height:inherit;max-width:inherit;max-height:inherit}.simplebar-mask{direction:inherit;position:absolute;overflow:hidden;padding:0;margin:0;left:0;top:0;bottom:0;right:0;width:auto!important;height:auto!important;z-index:0}.simplebar-offset{direction:inherit!important;box-sizing:inherit!important;resize:none!important;position:absolute;top:0;left:0;bottom:0;right:0;padding:0;margin:0;-webkit-overflow-scrolling:touch}.simplebar-content-wrapper{direction:inherit;box-sizing:border-box!important;position:relative;display:block;height:100%;width:auto;max-width:100%;max-height:100%;scrollbar-width:none;-ms-overflow-style:none}.simplebar-content-wrapper::-webkit-scrollbar,.simplebar-hide-scrollbar::-webkit-scrollbar{width:0;height:0}.simplebar-content:after,.simplebar-content:before{content:' ';display:table}.simplebar-placeholder{max-height:100%;max-width:100%;width:100%;pointer-events:none}.simplebar-height-auto-observer-wrapper{box-sizing:inherit!important;height:100%;width:100%;max-width:1px;position:relative;float:left;max-height:1px;overflow:hidden;z-index:-1;padding:0;margin:0;pointer-events:none;flex-grow:inherit;flex-shrink:0;flex-basis:0}.simplebar-height-auto-observer{box-sizing:inherit;display:block;opacity:0;position:absolute;top:0;left:0;height:1000%;width:1000%;min-height:1px;min-width:1px;overflow:hidden;pointer-events:none;z-index:-1}.simplebar-track{z-index:1;position:absolute;right:0;bottom:0;pointer-events:none;overflow:hidden}[data-simplebar].simplebar-dragging .simplebar-content{pointer-events:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-select:none}[data-simplebar].simplebar-dragging .simplebar-track{pointer-events:all}.simplebar-scrollbar{position:absolute;left:0;right:0;min-height:10px}.simplebar-scrollbar:before{position:absolute;content:'';background:#000;border-radius:7px;left:2px;right:2px;opacity:0;transition:opacity .2s linear}.simplebar-scrollbar.simplebar-visible:before{opacity:.5;transition:opacity 0s linear}.simplebar-track.simplebar-vertical{top:0;width:11px}.simplebar-track.simplebar-vertical .simplebar-scrollbar:before{top:2px;bottom:2px}.simplebar-track.simplebar-horizontal{left:0;height:11px}.simplebar-track.simplebar-horizontal .simplebar-scrollbar:before{height:100%;left:2px;right:2px}.simplebar-track.simplebar-horizontal .simplebar-scrollbar{right:auto;left:0;top:2px;height:7px;min-height:0;min-width:10px;width:auto}[data-simplebar-direction=rtl] .simplebar-track.simplebar-vertical{right:auto;left:0}.hs-dummy-scrollbar-size{direction:rtl;position:fixed;opacity:0;visibility:hidden;height:500px;width:500px;overflow-y:hidden;overflow-x:scroll}.simplebar-hide-scrollbar{position:fixed;left:0;visibility:hidden;overflow-y:scroll;scrollbar-width:none;-ms-overflow-style:none}@font-face{font-family:Roboto;src:url(../fonts/Roboto/Roboto-Bold.woff2) format("woff2"),url(../fonts/Roboto/Roboto-Bold.woff) format("woff");font-weight:700;font-style:normal;font-display:swap}@font-face{font-family:Roboto;src:url(../fonts/Roboto/Roboto-Regular.woff2) format("woff2"),url(../fonts/Roboto/Roboto-Regular.woff) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:Roboto;src:url(../fonts/Roboto/Roboto-Medium.woff2) format("woff2"),url(../fonts/Roboto/Roboto-Medium.woff) format("woff");font-weight:500;font-style:normal;font-display:swap}.btn{height:44px;padding:0 26px;position:relative;display:inline-flex;align-items:center;font-weight:400;font-size:16px;line-height:24px;text-transform:uppercase;color:#fff;border:0;outline:0;background:0 0;cursor:pointer;transition:all .3s ease;background:#00b7ff;border-radius:5px}.btn:hover{background:#0e99cf}.btn_new svg{width:20px;height:20px;margin-right:7px}.btn_send{height:30px;border-bottom:2px solid #0b587e;font-weight:400;font-size:14px;line-height:18px;text-transform:none;color:#fff;background:#069;display:flex;align-items:center;justify-content:center;border-radius:0}.btn_more{background:#0b587e;max-width:532px;display:flex;margin:0 auto;height:31px;font-weight:400;font-size:14px;line-height:20px;text-transform:uppercase;color:#fff;align-items:center;justify-content:center;border-radius:5px}.owl-nav{display:flex}.owl-nav .owl-next,.owl-nav .owl-prev{width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:50%;background:#fff!important;margin-left:10px;outline:0;transition:all .3s ease}@media (max-width:991px){.owl-nav .owl-next,.owl-nav .owl-prev{width:30px;height:30px}}.owl-nav .owl-next svg,.owl-nav .owl-prev svg{stroke:#393939;transition:all .3s ease}.owl-nav .owl-next:hover svg,.owl-nav .owl-prev:hover svg{stroke:#fff}.owl-nav .owl-next:active svg,.owl-nav .owl-prev:active svg{stroke:#fff}.el-tabs{display:flex}.el-tabs li{padding:0 25px;height:38px;display:flex;align-items:center;color:#393939;font-weight:400;font-size:14px;line-height:16px;position:relative;cursor:pointer;transition:all .3s ease}.el-tabs li:before{content:'';height:2px;position:absolute;left:0;right:0;top:0;background:#069;opacity:0;transition:all .3s ease}.el-tabs li:nth-child(1){border-radius:5px 0 0 0}.el-tabs li:hover{background:rgba(0,102,153,.15);color:#000}.el-tabs li:hover:before{opacity:1}.el-tabs li.is-active{background:rgba(0,102,153,.15);color:#000;cursor:default}.el-tabs li.is-active:before{opacity:1}.el-view{display:flex;align-items:center}.el-view li{font-weight:400;font-size:12px;color:#d3d5da;margin-left:10px}.el-view li a{color:#d3d5da;height:24px;line-height:24px;padding:0 10px;border-radius:5px;display:flex;align-items:center}.el-view li a:hover{background:#d3d5da;color:#fff}.el-view li.is-active a{background:#d3d5da;color:#fff}.el-status{height:24px;width:88px;border-radius:12px;border:1px solid #44c38d;display:flex;align-items:center;justify-content:center;font-weight:600;font-size:10px;line-height:16px;color:#44c38d}.el-status_blue{border:1px solid #069;color:#069}.el-status_orange{border:1px solid #f77c2d;color:#f77c2d}.form-subsc{max-width:250px;display:block}.form-radio{position:absolute;left:0;top:0;opacity:0;visibility:hidden}.form-radio+label{font-weight:400;font-size:14px;line-height:20px;color:#8f9bb3;position:relative;padding:0 0 0 21px;margin-bottom:3px;display:block;transition:all .3s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.form-radio+label:before{content:'';width:13px;height:13px;background:0 0;border:1px solid #8f9bb3;border-radius:50%;position:absolute;left:0;top:3px}.form-radio+label:after{content:'';width:7px;height:7px;background:#069;border-radius:50%;position:absolute;left:3px;top:6px;opacity:0;transition:all .3s ease}.form-radio:checked+label{color:#069}.form-radio:checked+label:after{opacity:1}.form-check{position:absolute;left:0;top:0;opacity:0;visibility:hidden}.form-check+label{font-weight:400;font-size:14px;line-height:20px;color:#8f9bb3;position:relative;padding:0 0 0 21px;margin-bottom:3px;display:block;transition:all .3s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.form-check+label:before{content:'';width:13px;height:13px;background:0 0;border:1px solid #8f9bb3;position:absolute;left:0;top:3px}.form-check+label:after{content:'';width:9px;height:9px;background:#069;position:absolute;left:2px;top:5px;opacity:0;transition:all .3s ease}.form-check:checked+label{color:#069}.form-check:checked+label:after{opacity:1}.form-range{display:grid;grid-template-columns:50px 24px 50px;align-items:center}.form-range>div{font-weight:400;font-size:14px;line-height:20px;color:#8f9bb3;text-align:center}.form-range>div .inp{height:22px;border:1px solid #8f9bb3;padding:0 7px;border-radius:0}.form-range>div .inp::-moz-placeholder{color:#dadcdf}.form-range>div .inp:-ms-input-placeholder{color:#dadcdf}.form-range>div .inp::placeholder{color:#dadcdf}select{width:100%}.select2-container{display:block}.select2-container--default .select2-selection--single{border-radius:0;border:1px solid rgba(91,109,123,.2);background:#fff;height:46px;outline:0}.select2-container--default .select2-selection--single .select2-selection__rendered{line-height:44px;font-size:14px;padding-left:15px;padding-right:40px;font-weight:500;font-size:14px;color:#393939}@media (max-width:991px){.select2-container--default .select2-selection--single .select2-selection__rendered{padding-right:30px}}.select2-container--default .select2-selection--single .select2-selection__arrow{height:44px;width:31px}@media (max-width:991px){.select2-container--default .select2-selection--single .select2-selection__arrow{width:24px}}.select2-container--default .select2-selection--single .select2-selection__arrow b{width:11px;height:6px;left:0;top:50%;margin:-3px 0 0 0;background:url(../img/arw-sel.svg) no-repeat;background-size:contain}.select2-dropdown{border:1px solid rgba(91,109,123,.7);background:#fff;border-radius:0}.select2-results__options{font-weight:500;font-size:14px;line-height:17px;color:#393939}.inp{height:40px;border:0;line-height:40px;padding:0 17px;font-size:14px;font-weight:300;background:#fff;border-radius:5px;width:100%;display:block;color:#8f9bb3}.inp::-moz-placeholder{color:#8f9bb3}.inp:-ms-input-placeholder{color:#8f9bb3}.inp::placeholder{color:#8f9bb3}.inp_subsc{padding:0;border-top:0;border-left:0;border-right:0;height:38px;line-height:37px;width:100%;display:block;letter-spacing:.4px;margin-bottom:17px}.table table{border-collapse:collapse;border-spacing:0;border:0;width:100%}.simplebar-track.simplebar-vertical{width:4px}.simplebar-track .simplebar-scrollbar:before{opacity:1;background:#bac0cc;left:0;right:0;top:0;bottom:0}.s-navBar{background:#057;height:39px}.s-navBar .container{display:flex}.s-navBar .menu{flex-grow:1}.s-navBar .menu ul{display:flex}.s-navBar .menu ul li{font-size:14px;line-height:26px;font-weight:700}.s-navBar .menu ul li a{color:#fff;height:39px;display:flex;align-items:center;padding:0 25px 0 24px}.s-navBar .menu ul li a:hover{background:#00b7ff}.s-navBar .menu ul li.is-active a{background:#00b7ff}.s-navBar .support{padding:0 15px}.s-navBar .support a{display:flex;height:39px;align-items:center;font-weight:400;font-size:14px;line-height:26px;color:#fff}.s-navBar .support a svg{width:20px;height:20px;margin-right:8px}.s-navBar .setup{position:relative}.s-navBar .setup>a{height:39px;background:#00b7ff;padding:0 22px 0 25px;display:flex;align-items:center;font-weight:400;font-size:14px;line-height:26px;color:#fff}.s-navBar .setup>a svg{width:20px;height:20px;margin-right:10px}.s-navBar .setup>a:after{content:'';width:0;height:0;border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid #fff;background:0 0;margin-left:7px}.s-navBar .setup__nav{position:absolute;right:0;top:100%;background:#f8f8f8;box-sizing:border-box;box-shadow:0 4px 4px rgba(0,0,0,.1);width:173px;z-index:10;opacity:0;visibility:hidden;transition:all .3s ease}.s-navBar .setup__nav ul li a{display:flex;height:31px;padding:0 11px;align-items:center;font-weight:400;font-size:12px;color:#393939}.s-navBar .setup__nav ul li a svg{width:10px;height:10px;margin-right:6px;fill:#393939;transition:all .3s ease}.s-navBar .setup__nav ul li a.is-active,.s-navBar .setup__nav ul li a:hover{background:#057;color:#fff}.s-navBar .setup__nav ul li a.is-active svg,.s-navBar .setup__nav ul li a:hover svg{fill:#fff}.s-navBar .setup:hover .setup__nav{opacity:1;visibility:visible}.s-main{padding:26px 0 120px 0}.b-pageBar{position:fixed;left:0;bottom:0;top:0;width:250px;background:#000;z-index:50;transform:translateX(-100%);transition:all .3s ease}.b-pageBar.is-open{transform:translateX(0)}.b-pageBar__btn{width:20px;height:20px;position:absolute;left:100%;top:50%;margin-top:-15px;background:#000;border-radius:0 5px 5px 0;display:flex;align-items:center;justify-content:center;cursor:pointer}.b-pageBar__btn svg{width:10px;height:10px;fill:#fff}.b-pageBar ul{padding:5px;overflow-y:auto}.b-pageBar ul li{margin-bottom:5px;font-weight:400}.b-pageBar ul li a{color:#fff;display:block;background:rgba(255,255,255,.2);padding:5px 10px}.b-pageBar ul li a:hover{background:rgba(255,255,255,.4)}.b-title{display:flex;justify-content:space-between;align-items:center;margin-bottom:26px}.b-sep{border-top:1px solid #e9e5e5;font-weight:400;font-size:8px;color:#b8b8b8;padding-top:10px;padding-bottom:20px}.b-page{display:grid;grid-template-columns:1fr 350px;grid-column-gap:30px}.b-list{height:395px;background:#fff;box-shadow:0 4px 4px rgba(0,0,0,.1);border-radius:5px;overflow-y:auto;padding:0 15px 0 21px;padding-top:8px;overflow-x:hidden}.b-list__item{border-top:1px solid #eff1f6;position:relative;padding-left:40px;padding-top:23px;padding-bottom:8px}.b-list__item:first-child{border-top:0}.b-list__item__icon{position:absolute;left:0;top:20px}.b-list__item__icon svg{width:24px;max-height:24px}.b-list__item__date{margin-bottom:5px;font-weight:400;font-size:12px;line-height:14px;color:#393939}.b-list__item__title{font-weight:400;font-size:14px;line-height:20px;height:46px;display:flex;align-items:center}.b-list__item__title a{color:#069;text-decoration:underline}.b-list__item__title a:hover{text-decoration:none}.b-barTop{display:flex;justify-content:space-between}.b-search{flex-grow:1;max-width:522px;position:relative}.b-search .inp{padding-right:42px}.b-search button{position:absolute;right:12px;border:0;top:50%;margin-top:-10px;width:20px;height:20px;background:0 0;cursor:pointer}.b-search button svg{width:20px;height:20px}.b-search_w4{max-width:432px}.b-filterBtn{display:flex;align-items:center;cursor:pointer}.b-filterBtn span{font-weight:400;font-size:14px;line-height:20px;-webkit-text-decoration-line:underline;text-decoration-line:underline;color:#8f9bb3}.b-filterBtn svg{width:9px;height:9px;margin-left:5px}.b-filterBtn:hover span{text-decoration:none}.b-filter{max-width:522px;display:grid;grid-template-columns:163px 1fr;grid-column-gap:16px;margin-top:15px}.b-filter__date{display:grid;grid-template-columns:1fr 1fr;grid-column-gap:19px}.b-filter__date>div{position:relative}.b-filter__date>div:first-child:before{content:'';width:6px;height:1px;background:#8f9bb3;position:absolute;right:-13px;top:50%}.b-filter-box{background:#fff;box-shadow:0 4px 4px rgba(0,0,0,.1);border-radius:5px;padding:15px 0}.b-filter-box__item{margin-bottom:19px}.b-filter-box__item:last-child{margin-bottom:0}.b-filter-box__title{padding:0 15px 0 17px;display:flex;justify-content:space-between;align-items:center;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.b-filter-box__title span{font-weight:400;font-size:14px;line-height:20px;color:#8f9bb3;transition:all .3s ease}.b-filter-box__title svg{width:12px;height:10px;fill:#8f9bb3}.b-filter-box__title.is-active span{color:#069}.b-filter-box__title.is-active svg{transform:rotate(90deg);fill:#069}.b-filter-box__frame{padding:0;max-height:0;overflow:hidden;transition:max-height .3s ease}.b-filter-box__frame ul{padding:20px 17px;padding-bottom:10px}.b-filter-box__frame ul li{position:relative}.b-filter-box__frame.is-open{display:block}.b-table{background:#fff;box-shadow:0 4px 4px rgba(0,0,0,.1);border-radius:5px;margin-top:17px;overflow:hidden}.b-table__bar{display:flex;justify-content:space-between;align-items:center;padding-right:19px}.b-table table{border-collapse:collapse;border-spacing:0;width:100%}.b-table table tr th{height:46px;background:rgba(0,102,153,.15);font-weight:400;font-size:12px;line-height:14px;color:#000;padding:0 19px}.b-table table tr th:last-child{width:126px;padding-left:0;padding-right:0}.b-table table tr th:nth-child(1){width:106px;padding-left:0;padding-right:0}.b-table table tr th:nth-child(4){width:109px}.b-table table tr td{text-align:center;padding:18px 19px 17px 19px}.b-table table tr td img{display:block;margin:0 auto}.b-table table tr td:first-child,.b-table table tr td:last-child{width:1%}.b-table table tr td:last-child{width:126px;padding-left:0;padding-right:0}.b-table table tr td:last-child .el-status{margin-left:auto;margin-right:auto}.b-table table tr td:nth-child(1){width:106px;padding-left:0;padding-right:0}.b-table table tr td:nth-child(1) span{display:block;margin-top:6px}.b-table table tr td:nth-child(2){width:25%}.b-table table tr td.text-l{text-align:left}.b-table table tr td a{color:#069}.b-table table tr:nth-child(2n) td{background:rgba(0,102,153,.08)}.b-table .table-td{max-height:296px;overflow-y:auto;overflow-x:hidden}.b-dashboard{display:grid;grid-template-columns:1fr 1fr 1fr 1fr;grid-column-gap:30px}.b-dashboard__item a{height:210px;background:#fff;box-shadow:0 4px 4px rgba(0,0,0,.1);border-radius:5px;display:flex;flex-direction:column;align-items:center;justify-content:center}.b-dashboard__item a img{width:64px;height:64px;margin-top:18px;margin-bottom:20px}.b-dashboard__item a span{font-weight:500;font-size:14px;line-height:20px;color:#069}.b-dashboard__item a strong{font-weight:400;font-size:30px;line-height:20px}.b-dashboard__item.is-blue span,.b-dashboard__item.is-blue strong{color:#069}.b-dashboard__item.is-green span,.b-dashboard__item.is-green strong{color:#44c38d}.b-dashboard__item.is-red span,.b-dashboard__item.is-red strong{color:#f05a50}.b-dashboard__item.is-orange span,.b-dashboard__item.is-orange strong{color:#f77c2d}.b-frame{height:476px;background:#fff;box-shadow:0 4px 4px rgba(0,0,0,.1);border-radius:5px;margin-top:36px}.b-catalog{display:grid;grid-template-columns:255px 1fr;grid-column-gap:30px;margin-top:15px}.b-catalog__topBar{display:grid;grid-template-columns:1fr 175px;grid-column-gap:34px;margin-bottom:21px}.b-catalog__frame{background:#fff;box-shadow:0 4px 4px rgba(0,0,0,.1);border-radius:5px;padding:18px}.b-catalog__list{display:grid;grid-template-columns:1fr 1fr 1fr 1fr;grid-gap:20px;grid-row-gap:30px}.b-box{margin-bottom:21px}.b-tab{display:grid;grid-template-columns:1fr 1fr 1fr 1fr;grid-column-gap:10px}.b-tab__item a{background:#fff;border-radius:5px;display:flex;align-items:center;height:40px;font-weight:400;font-size:14px;line-height:20px;color:#8f9bb3;padding:0 17px;border:1px solid #fff}.b-tab__item a.is-active,.b-tab__item a:hover{border:1px solid #069;color:#069}.b-product{background:#fff;box-shadow:1px 1px 4px rgba(0,0,0,.1);padding:9px;position:relative;overflow:hidden;transition:all .3s ease}.b-product__info{position:relative;text-align:right;margin-bottom:11px}.b-product__image{display:flex;justify-content:center;margin-bottom:8px}.b-product__image a img{display:block}.b-product__desc{padding-bottom:9px}.b-product__desc h5{font-weight:500;font-size:14px;line-height:18px;color:#393939;margin:0 0 9px 0;text-align:center}.b-product__desc p{font-weight:400;font-size:8px;line-height:12px;text-align:center;color:#5c5c5c;margin:0}.b-product__send{transition:all .3s ease;overflow:hidden;height:0}.b-product__discount{position:absolute;left:0;top:0;background:#e34646;height:20px;font-weight:400;font-size:12px;line-height:20px;color:#fff;padding:0 6px}.b-product__price{font-size:20px;line-height:20px;color:#393939}.b-product__id{font-weight:400;font-size:8px;line-height:14px;color:#5c5c5c}.b-product:hover{margin-bottom:-30px;z-index:5}.b-product:hover .b-product__send{height:30px}.b-more{margin-top:50px}*,::after,::before{box-sizing:inherit;padding:0;margin:0;outline:0}html{box-sizing:border-box}body{font:400 12px/1.166 Roboto,Arial,Helvetica,sans-serif;background:#f2f1ef;color:#393939;min-width:1100px}body.menu-open{overflow:hidden}img{max-width:100%}a{text-decoration:none;transition:all .3s ease}.wrap{position:relative;min-height:100vh}.container{max-width:1150px;margin:0 auto;padding:0 20px}img{display:block}strong{font-weight:400}h1,h2,h3,h4,h5,h6{font-weight:700;line-height:100%;transition:all .3s ease;font-size:40px;margin:0 0 30px 0;color:#057}h1{font-weight:400;font-size:40px;margin:0}h2,h4{font-size:14px;text-transform:uppercase;line-height:16px;letter-spacing:1.5px;padding-top:10px;margin-bottom:15px}p{margin:0 0 40px 0}@media (max-width:767px){p{margin-bottom:20px}}ul li{list-style:none}.s-header{background:#fff}.s-header .container{display:flex;align-items:center}.s-header .logo{flex-grow:1;display:flex}.s-header .logo a img{display:block}.s-header .user{background:rgba(0,102,153,.05);height:65px;display:flex;align-items:center;padding:0 22px 0 21px}.s-header .user__image{margin-right:12px}.s-header .user__image a{width:38px;height:38px;overflow:hidden;border-radius:50%;display:block}.s-header .user__image img{width:38px;height:38px;display:block}.s-header .user__info__name{font-size:14px;font-weight:400;line-height:1}.s-header .user__info__name a{color:#069;display:flex;align-items:center}.s-header .user__info__name a:after{content:'';width:0;height:0;border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #069;background:0 0;margin-left:6px}.s-header .user__info__status{font-size:9px;text-decoration:underline;color:#393939;margin-bottom:5px}.s-header .user__info__reit{display:flex;align-items:center;font-weight:400;font-size:9px;color:#393939}.s-header .user__info__reit svg{width:8px;height:8px;margin-right:3px}.s-header .balance{margin-right:32px}.s-header .balance a{font-weight:400;font-size:14px;color:#057;border-bottom:1px solid rgba(0,85,119,.7)}.s-header .balance a:hover{border-bottom:1px solid rgba(0,85,119,0)}.s-footer{background:#057;position:absolute;left:0;right:0;bottom:0;font-weight:400;font-size:14px;color:#fff;min-width:991px}.s-footer .container{height:71px;display:flex;justify-content:space-between;align-items:center}.s-footer .social ul{display:flex;align-items:center}.s-footer .social ul li{margin:0 6px}.s-footer .social ul li a{display:flex}.s-footer .social ul li a svg{width:22px;height:22px;fill:#d8d8d8;transition:all .3s ease}.s-footer .social ul li a:hover svg{fill:#fff}.s-footer .terms a{color:#fff;border-bottom:1px solid rgba(255,255,255,.7)}.s-footer .terms a:hover{border-bottom:1px solid rgba(255,255,255,0)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
